---
import Layout from "../../layouts/Layout.astro";
import PageTitle from "../../components/PageTitle.astro";
import {sanityClient} from "sanity:client";
import Timeline from "../../components/page-block/Timeline.astro";
import RelatedInternalLinks
  from "../../components/page-block/RelatedInternalLinks.astro";
import TextBlock from "../../components/text-block/TextBlock.astro";
import type { TeachingEntry, TeachingLink, TeachingLinkEntry, TeachingAsset } from "@/types";

const teachingData = await sanityClient.fetch<TeachingEntry[]>(`*[_type == 'teaching']{
  "experience": {
    "type": 'timeline',
    "records": experience[]
  },
  "overview": overview[]{
      _type == 'imageBlock' => {
        type,
        "url": image.asset->url,
        "caption": image.caption
      },
      _type == 'gallery' => {
        type,
        title,
        "pictures": images[]{
          "url": asset->url,
          caption
        }
      },
      ...
    },
  "links": content.links[]->{
    _type == 'article' => {
      "type": _type,
      "title": title,
      "slug": slug.current
    },
    _type == 'book' => {
      "type": _type,
      title,
      "slug": slug.current
    },
    _type == 'exhibition' => {
      "type": _type,
      title,
      "slug": slug.current
    },
  },
  "assets": content.links[] {
    title,
    "type": "file",
    "url": asset->url
  }
}`);

function mergeArrays(
  links: TeachingLinkEntry[],
  assets: TeachingAsset[],
): (TeachingLink | TeachingAsset)[] {
  // 确保两个数组长度相同
  if (links.length !== assets.length) {
    throw new Error("两个数组的长度不相同");
  }

  return links.map((link, index) => {
    if (link) {
      return link;
    }

    const asset = assets[index];
    if (!asset) {
      throw new Error("缺少与链接对应的附件资源");
    }
    return asset;
  });
}

const teachingEntry = teachingData[0];
const overview = teachingEntry?.overview;
const experience = teachingEntry?.experience;
const links = teachingEntry ? mergeArrays(teachingEntry.links, teachingEntry.assets) : [];
---

<Layout title = "Teaching">
  <PageTitle
    title = "Teaching"
    bgWhite = "false"
    localImg = "/images/education-cover.jpg"
  />
  <main
    class = "px-4 flex flex-col gap-4 py-8 md:grid md:grid-cols-12 md:gap-8 md:py-16 lg:max-w-8xl lg:mx-auto 8xl:px-0"
  >
    <div class = "col-start-4 col-end-12 w-full">
      {experience &&
        <Timeline title="Experience" records={experience.records} />
      }
      {overview &&
        <div class = "my-16 lg:my-32 flex flex-col">
          <h2 class = "font-serif font-bold text-3xl lg:text-6xl text-neutral-900 mb-8 lg:mb-16">Overview</h2>
          <TextBlock overview = {overview}/>
        </div>
      }
      {links &&
          <RelatedInternalLinks title="Teaching materials" links={links} />
      }
    </div>
  </main>
</Layout>

<style is:global>
  .swiper {
    overflow: visible !important;
  }
</style>
