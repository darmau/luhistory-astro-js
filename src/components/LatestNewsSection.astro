---
import { sanityClient } from "sanity:client";
import LatestNewsSlider from "./slider/LatestNewsSlider.tsx";
import type { LatestNewsItem } from "@/types";
import { buildRemoteImageSetOrNull } from "@/utils/remoteImage";

const latestArchivesRaw = await sanityClient.fetch<
  LatestNewsItem[]
>(`*[_type == 'article' && isTop == true && defined(slug)] | order(publishDate desc){
  title,
  subtitle,
  "slug": slug.current,
  "cover": cover.asset->url
}[0...3]`);

const responsiveWidths = [480, 720, 960];
const responsiveSizes = "(max-width: 1023px) 100vw, 33vw";

const latestArchives: LatestNewsItem[] = await Promise.all(
  latestArchivesRaw.map(async (item) => {
    if (!item.cover) {
      return { ...item, coverImage: null } satisfies LatestNewsItem;
    }

    const coverImage = await buildRemoteImageSetOrNull({
      src: item.cover,
      alt: item.title,
      widths: responsiveWidths,
      sizes: responsiveSizes,
    });

    if (!coverImage) {
      console.warn("Falling back to remote Sanity image", { slug: item.slug });
    }

    return {
      ...item,
      coverImage,
    } satisfies LatestNewsItem;
  }),
);
---

{
  latestArchives && (
    <div class="col-start-1 col-span-12 mb-8 p-4 sm:p-0 sm:col-start-2 sm:col-span-10 lg:mb-40">
      <hgroup class="flex justify-between items-baseline text-neutral-900 mb-8 md:mb-20">
        <h2 class="font-serif font-bold text-3xl md:text-5xl">Highlights</h2>
      </hgroup>
      <div class="overflow-visible">
        <LatestNewsSlider client:load news={latestArchives} />
      </div>
    </div>
  )
}
