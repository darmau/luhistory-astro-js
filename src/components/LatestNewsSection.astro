---
import {sanityClient} from "sanity:client";
import LatestNewsSlider from "./slider/LatestNewsSlider.tsx"
const latestArchives = await sanityClient.fetch(`*[_type == 'article' && isTop == true && defined(slug)] | order(publishDate desc){
  title,
  subtitle,
  "slug": slug.current,
  "cover": cover.asset->url
}[0...6]`);
---

{latestArchives && (
<div
  id = "latest-container"
  class = "col-start-1 col-span-12 mb-8 p-4 sm:p-0 sm:col-start-2 sm:col-span-10 lg:mb-40"
>
  <hgroup
    class = "flex justify-between items-baseline text-neutral-900 mb-8 md:mb-20"
  >
    <h2 class = "font-bold text-3xl md:text-5xl font-serif">Highlights</h2>
  </hgroup>
  <div class = "overflow-visible">
    <LatestNewsSlider client:visible news = {latestArchives}/>
  </div>
</div>
    )}

<style>
  #latest-container {
    transition: all 0.5s ease-in-out;
  }

  .invisible {
    opacity: 0;
  }

  .visible {
    opacity: 1;
  }
</style>

<script>
  // 选择container，在进入viewport的时候添加class
  function showContainer() {
    const container = document.getElementById('latest-container');
    const options = {
      root: null,
      rootMargin: '0px',
      threshold: 0.1
    };

    const observer = new IntersectionObserver((entries) => {
      entries.forEach(entry => {
        if (entry.isIntersecting) {
          entry.target.classList.add('visible');
          entry.target.classList.remove('invisible');
        } else {
          entry.target.classList.remove('visible');
          entry.target.classList.add('invisible');
        }
      });
    }, options);

    if (!container) {
      return;
    }

    observer.observe(container);
  }

  document.addEventListener('DOMContentLoaded', showContainer);
  document.addEventListener('astro:after-swap', showContainer);
</script>
